function [SWEImg,position] = GetSWEImg_orange(BmodeImg, BmodeImgButtom)

% This is a function that segments the SWE image from the segmented
% B-Mode image. The SWE image is surrounded by an orange frame. This is
% easiest to be detected in the buttom B-mode image where no other colours
% are included in the image. Orange is characterised by high values on the
% R-map and low values on the B-map, whereas grey and white have similar
% values on all three colourmaps. Thus, the difference between the R-map
% and the B-map are calculated and then the frame is detected. The position
% of the SWE image within the B-mode image is identical in the upper and
% the lower image and thus the SWE image cam be segmented.
%
% Input: 
%         BmodeImg - upper B-Mode image containing SWE, output of function 
%                    segmentBmodeNew()
%         BmodeImgButtom - buttom B-mode image
%         
% Output:
%         SWEImg - Cropped SWE region
%                - Used in: drawGrid()
%         position - coordinates of SWE region (rowStart, rowEnd, colStart,
%         colEnd)
%                  - Used in: 
%
% Used functions:
%         
% Function used in:
%       - main_GridAnalysis()
%       - main_ROIAnalysis()
%
% author: Katrin Skerl, HFU
% date: 28/08/22 based on the function GetSWEImg_m by Mehrin Azan

%calculate the difference between the R and B images
diffImg = abs(BmodeImgButtom(:,:,1)-BmodeImgButtom(:,:,3));
diffImg = im2bw(diffImg,0.3); %threshold might need

    % Input: single bmode image
    thresh = 1;
    % Subtract colour channels
    idx = abs(BmodeImg(:,:,1)-BmodeImg(:,:,2))<=thresh & abs(BmodeImg(:,:,2)-BmodeImg(:,:,3))<=thresh;
    inv2 = imcomplement(idx); % Invert image
    inv = bwpropfilt(inv2,'perimeter',1); % Only keep object with largest perimeter (SWE image)
    
    sumRows = sum(inv, 2); % Sum vector for rows 
    maxRow = max(sumRows);
    imLimRow = maxRow * 0.75; % Find 75% value of rows
    
    sumCols = sum(inv, 1);  % Sum vector for colums
    maxCol = max(sumCols);
    imLimCol = maxCol * 0.75; % Find 75% value of columns
    
    % Find start and end row of SWE image
    rowLocs(1) = find(sumRows > imLimRow, 1, 'first');
    rowLocs(2) = find(sumRows > imLimRow, 1, 'last');
    colLocs(1) = find(sumCols > imLimCol, 1, 'first');
    colLocs(2) = find(sumCols > imLimCol, 1, 'last');

    SWEImg = BmodeImg(rowLocs(1):rowLocs(2), colLocs(1):colLocs(2), :);
    position = [rowLocs(1),rowLocs(2), colLocs(1),colLocs(2)];
end